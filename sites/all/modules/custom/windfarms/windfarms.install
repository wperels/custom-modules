<?php

/* 
 * @file
 * Wind Farms installation
 */

/**
 * Implements hook_install().
 */
function windfarms_install() {
  //Set default variables.
  variable_set('windfarms_gmap', 1);
  variable_set('windfarms_default_center_lat', 42.91455);
  variable_set('windfarms_default_center_long', -75.569851);
  variable_set('windfarms_default_gmap_zoom', 8);
  
  //Get localization function for installation as t() may be unavailable.
  $t = get_t();
  
  //Give user feedback.
  drupal_set_message($t('Wind Farms variables created.'));


  // Content type definition. 
  $content_type = array(
    'type' => 'windfarm',
    'name' => $t('Wind Farm'),
    'description' => $t('A Wind Farm, including location'),
    'title_label' => $t('Facility Name'),
    'base' => 'node_content',
    'custom' => TRUE,
  );

  // Set remaining definitions with default settings.
  $node_type = node_type_set_defaults($content_type);

  // Save the current type.
  node_type_save($node_type);

  // Add a field for the body.
  node_add_body_field($node_type, t('Description'));

  // Create fields.
  $fields = array();

  $fields['windfarm_unit_count'] = array(
    'field_name' => 'windfarm_unit_count',
    'type' => 'number_integer',
    'cardinality' => 1,
    'settings' => array(
      'max_length' => 5,
    )
     );
  $fields['windfarm_latitude'] = array(
    'field_name' => 'windfarm_latitude',
    'type' => 'number_float',
    'settings' => array(
      'max_length' => '20',
    )
    );
  $fields['windfarm_longitude'] = array(
    'field_name' => 'windfarm_longitude',
    'type' => 'number_float',
    'settings' => array(
      'max_length' => '20',
    )
    );
  $fields['windfarm_turbine_manufacturer'] = array(
    'field_name' => 'windfarm_turbine_manufacturer',
    'type' => 'text',
    'settings' => array(
      'max_length' => '60',
    )
    );
   foreach($fields as $field) {
     field_create_field($field);
    }
  
  //Create Field Instances.
  $instances = array();
  
  $instances['windfarm_unit_count'] = array(
    'field_name' => 'windfarm_unit_count',
    'label' => $t('Number of Units'),
    'description' => $t('The number of individual units at a given Facility'),
    'widget' => array(
      'type' => 'text_textfield',
    ),
    'required' => TRUE,
    'settings' => array(
      'text_processing' => 0,
    ),
  );
  
  $instances['windfarm_latitude'] = array(
    'field_name' => 'windfarm_latitude',
    'label' => $t('Latitude'),
    'description' => $t('Signed degrees format (DDD.ddd)'),
    'widget' => array(
      'type' => 'text_textfield',
    ),
    'required' => TRUE,
    'settings' => array(
      'text_processing' => 0,
    ),
    'display' => array(
      'default' => array(
        'type' => 'hidden',
      ),
    ),
  );
  
  $instances['windfarm_longitude'] = array(
    'field_name' => 'windfarm_longitude',
    'label' => $t('Longitude'),
    'description' => $t('Signed degrees format (DDD.ddd)'),
    'widget' => array(
      'type' => 'text_textfield',
    ),
    'required' => 'TRUE',
    'settings' => array(
      'text_processing' => 0,
    ),
    'display' => array(
      'default' => array(
        'type' => 'hidden',
      ),
    ),
  );
  
  $instances['windfarm_turbine_manufacturer'] = array(
    'field_name' => 'windfarm_turbine_manufacturer',
    'label' => $t('Windfarm Turbine Manufacturer'),
    'description' => $t('The name of the turbine maufacturer'),
    'widget' => array(
      'type' => 'text_textfield',
    ),
    'display' => array(
      'default' => array(
        'label' => 'inline',
      ),
    ),
  );
  foreach($instances as $instance) {
    $instance['entity_type'] = 'node';
    $instance['bundle'] = 'windfarm';
    field_create_instance($instance);
  }
}
/*
 *  Implements hook_uninstall.
 */
function windfarms_uninstall() {
  // Delete variables.
  variable_del('windfarms_gmap');
  variable_del('windfarms_default_center_lat');
  variable_del('windfarms_default_center_long');
  variable_del('windfarms_default_gmap_zoom');
  
  // Inform user that that the variables are deleted
  $t = get_t();
  drupal_set_message($t('Wind Farms variables removed.'));
  
  // Get all node IDs with windfarm content type.
  $sql_query = 'SELECT nid ';
  $sql_query .= 'FROM {node} ';
  $sql_query .= 'WHERE {node}.type = :type ';
  $result = db_query($sql_query, array(':type' => 'windfarm'));
  
  $nids = array();
    foreach($result as $row) {
      $nids[] = $row -> nid;
    }
    
  // Delete all windfarm content.
  node_delete_multiple($nids);
  drupal_set_message($t('Wind Farm content removed.'));
  
  // Remove all fields and field instances.
  foreach (field_info_instances('node', 'windfarm') as $field_name => $instance) {
   field_delete_field($field_name);
   field_delete_instance($instance);
  }
  drupal_set_message($t('Wind Farm field and field instances removed.'));
  
  // Delete the content type.
  node_type_delete('windfarm');
  drupal_set_message($t('Wind Farm Content Type removed.'));
  
  // Clean all deleted fields.
  field_purge_batch(1000);
}